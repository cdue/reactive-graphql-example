buildscript {
	ext {
    jacksonModuleVersion = '2.9.6'
		kotlinVersion = '1.2.41'
		graphqlJavaToolsVersion = '5.2.3'
    graphqlJavaVersion = '9.2'
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.cdue'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

configurations {
  compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
  compile("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonModuleVersion}")
  compile("com.graphql-java:graphql-java-tools:${graphqlJavaToolsVersion}")
  compile("com.graphql-java:graphql-java:${graphqlJavaVersion}")
  // DO NOT import `graphql-spring-boot-starter` but only `graphql-java`
  compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
  compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
  compile("org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}")
  compile("org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}")

	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	testCompile("io.projectreactor:reactor-test")
}

// Allows to use `./gradlew bootRun -Dspring.profiles.active=dev` to run the app with a given profile
bootRun.systemProperties = System.properties
